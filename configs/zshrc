# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set my terminal if I'm not in tmux.
[[ "$TMUX" == "" ]] && TERM=xterm-256color

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="bbs"

# Uncomment following line if you want to disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting
# for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in
# ~/.oh-my-zsh/plugins/*).
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git colorize themes)

source $ZSH/oh-my-zsh.sh

# Configure directory names:
WROOT=/usr/local/www/data-local

# Configure actual zsh options as desired here:
setopt AUTO_LIST        # Display completion candidates immediately.
setopt CDABLE_VARS      # When an argument should be a dir but is not one,
                        # expand it as if it started with ~ (see below).
setopt AUTO_NAME_DIRS   # Any parameter that is set to an abosolute directory
                        # name automatically becomes a name for that directory
                        # in the form ~param.
setopt HIST_IGNORE_DUPS # Do not record a command in the history if it is a
                        # duplicate of the previous one.
setopt LIST_TYPES       # When listing files that are possible completions,
                        # indicate their types with a trailing character.
setopt MENU_COMPLETE    # On an ambiguous completion, insert the first match
                        # immediately rather than waiting for another tab.

# Customize to your needs...
export PATH=$PATH:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/texbin:$HOME/.vim/bundle/vim-committed/bin

# In case you want to see a new MOTD, you can just call this function.
function motd () {
  # Set up some ANSI colors real quick.
  WHITE="\e[38;5;255m"
  GRAY="\e[38;5;239m"
  SILVER="\e[38;5;245m"

  # Output a fortune on login if the program exists.
  # This generates a very elaborate box. Perl is used to pad each line of fortune
  # with spaces so that the right edge of the box aligns. This proved to be
  # difficult if not impossible to do with awk/sed. I obviously hold my ASCII
  # boxes in very high regard.
  which fortune > /dev/null && which sed > /dev/null
  if (( $? == 0 )); then
    HEAD="╡ ${WHITE}M${SILVER}essage ${WHITE}O${SILVER}f ${WHITE}T${SILVER}he ${WHITE}D${SILVER}ay${GRAY} ╞"
    TOP_LEN=$(( $COLUMNS - 32 ))
    BOTTOM_LEN=$(( $COLUMNS - 10 ))
    TOP_LINE=${(l:$TOP_LEN::═:)}
    BOTTOM_LINE=${(l:$BOTTOM_LEN::═:)}

    echo "$WHITE╒═$SILVER════$GRAY$TOP_LINE$HEAD$SILVER═$WHITE═╕"
    fortune -s | perl -e 'my $cols=shift @ARGV; while (<>) { chomp; s/\t/    /g; print "│ ".$_.(" " x ($cols-length()-4))."│\n"; }' ${COLUMNS}
    echo "$WHITE╘═$SILVER═$GRAY$BOTTOM_LINE$SILVER════$WHITE═╛"
  fi
}

# Only for work.
if [[ "$MY_LOCATION" == "work" ]]; then
	if which ack-grep > /dev/null 2> /dev/null; then
		alias ack="ack-grep --pager='less'"
	fi

	alias svnc="svn-color.py"
	export PATH=$PATH:~/bin/svnkit-1.7.9/bin
	export PATH=$PATH:$HOME/.vim/bundle/commit-tracker/bin
	export PATH=$PATH:$HOME/bin/rbstats
  export WROOT=/usr/local/www/data-local
else
	# This is really only for OS X, so don't use it at work.
	function top() {
		if [ $# -eq 0 ]; then
			/usr/bin/top -o cpu
		else
			/usr/bin/top "$@"
		fi
	}

	alias vim='/usr/local/Cellar/vim/7.3.861/bin/vim'
fi

# Show an MOTD on login :-)
motd

# vim: set et ts=2 sw=2 tw=79 cc=+1 :
