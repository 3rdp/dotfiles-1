#!/bin/zsh -f

# For tramp et al., don't do anything fancy.
if [[ "$TERM" == "dumb"  ]]
then
  unsetopt zle
  unsetopt prompt_cr
  unsetopt prompt_subst
  unfunction precmd
  unfunction preexec
  PS1='$ '
  return
fi

source ~/.zsh_functions

# Reattach or start a new Tmux.
# This function name is short because I want to call it this way
# interactively.
t

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set my terminal if I'm not in tmux.
[[ "$TMUX" == "" ]] && TERM=xterm-256color

# Disable autosetting terminal title.
DISABLE_AUTO_TITLE="true"

# Disable command autocorrection.
DISABLE_CORRECTION="true"

# Display red dots while waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Disable marking untracked files under VCS as dirty. This makes repository
# status check for large repositories much, much faster.
DISABLE_UNTRACKED_FILES_DIRTY="true"

# Load these oh-my-zsh plugins.
plugins=(git colorize themes virtualenv virtualenvwrapper)

# Configure zsh options #######################################################
setopt autolist       # Display completion candidates immediately.
setopt cdablevars     # When an argument should be a dir but is not one,
                      # expand it as if it started with ~ (see below).
setopt autonamedirs   # Any parameter that is set to an abosolute directory
                      # name automatically becomes a name for that directory
                      # in the form ~param.
setopt histignoredups # Do not record a command in the history if it is a
                      # duplicate of the previous one.
setopt listtypes      # When listing files that are possible completions,
                      # indicate their types with a trailing character.
setopt nolistbeep     # No bell on ambiguous completion!!

# I like my slow locomotive.
unalias sl > /dev/null 2>&1

# Add locations to the $PATH that actually exist.
PATH="/usr/local/bin:$PATH"
[ -d "/usr/texbin" ]                  && PATH="/usr/texbin:$PATH"
[ -d "/usr/local/share/npm/bin" ]     && PATH="/usr/local/share/npm/bin:$PATH"
[ -d "$HOME/.composer/vendor/bin" ]   && PATH="$PATH:$HOME/.composer/vendor/bin"
[ -d "$HOME/go/bin" ]                 && PATH="$PATH:$HOME/go/bin"
[ -d "$HOME/Library/Python/2.7/bin" ] && PATH="$PATH:$HOME/Library/Python/2.7/bin"

if [ -d "$HOME/Library/Android/sdk" ]; then
  export ANDROID_HOME="$HOME/Library/Android/sdk"
fi

if [ -d "$ANDROID_HOME/tools" ]; then
  PATH="$PATH:${ANDROID_HOME}/tools"
fi

if [ -d "$ANDROID_HOME/platform-tools" ]; then
  PATH="$PATH:${ANDROID_HOME}/platform-tools"
fi

# Add my scripts directory to my path if it's there.
if [ -d "$HOME/bin" ]; then
  PATH="$HOME/bin:$PATH"
fi

source $ZSH/oh-my-zsh.sh
source $HOME/.zsh_prompt

# Use VI mode.
bindkey -v
bindkey '^R' history-incremental-search-backward

# Adjust widget behaviors. ####################################################
# While selecting from menu completion, pressing enter accepts the selection
# and executes the command.
bindkey -M menuselect '^M' .accept-line

# Set Emacs server path if it's there.
[ -d "$HOME/.emacs.d" ] && export EMACS_SERVER_FILE="$HOME/.emacs.d/server"

# Initialize rbenv if it exists on this system and isn't yet in our path.
# This prevents path duplication in tmux when a sub-shell runs this script
# again.
if [ -d $HOME/.rbenv/shims ] && [[ ! "$PATH" =~ "rbenv" ]]; then
  export PATH="$HOME/.rbenv/shims:$PATH"
  type rbenv >/dev/null 2>&1
  [[ "$?" == 0 ]] && eval "$(rbenv init -)"
fi

# Configure my Go workspace, if I have it.
if [ -d $HOME/go ]; then
  type go >/dev/null 2>&1
  if [[ "$?" == 0 ]]; then
    export GOPATH=$HOME/go
  fi
fi

function nicediff {
  diff -W `tput cols` -y "$@" | colordiff | less
}

function serve {
  if [ $# -gt 0 ]; then
    port="$1"
  else
    port=8000
  fi

  which python > /dev/null && python -m SimpleHTTPServer $port
}

# Put the SSH agent socket in a predictable location. If we have an
# $SSH_AUTH_SOCK value already, link to it from a known path in /tmp. If we do
# not have an $SSH_AUTH_SOCK value but the socket link exists in /tmp, set the
# value to that link. The first case typically takes place when first
# connecting to a remote host and the second case typically takes place when
# re-attaching a previously detached tmux session.
SOCK="/tmp/ssh-agent-$USER-socket"
if [ $SSH_AUTH_SOCK ] && [ $SSH_AUTH_SOCK != $SOCK ]; then
  rm -f "/tmp/ssh-agent-$USER-socket"
  ln -sf $SSH_AUTH_SOCK $SOCK
  export SSH_AUTH_SOCK=$SOCK
elif [ -h $SOCK ] && [ ! $SSH_AUTH_SOCK ]; then
  export SSH_AUTH_SOCK=$SOCK
fi

### Aliases.
## Tmux:
alias ta="tmux attach"
alias tad="tmux attach -d"
alias tl="tmux ls"
alias urldecode='python -c "import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])"'
alias ssh='ssh -A'
alias cpr="rsync -aP"

command -v xdg-open >/dev/null 2>&1 && alias open="xdg-open"

## Emacs:
alias e="emacsclient -s ~/.emacs.d/server/server"
export EDITOR="emacsclient -s ~/.emacs.d/server/server"
export ALTERNATE_EDITOR=""
export VISUAL="emacsclient"

## I don't know why this isn't configured by default.
export LD_LIBRARY_PATH=/usr/local/lib

if [ -f "$HOME/.zshrc_$MY_LOCATION" ]; then
  source "$HOME/.zshrc_$MY_LOCATION"
fi

# OS X things.
if [[ `uname` == "Darwin" ]]; then
  function top() {
    if [ $# -eq 0 ]; then
      /usr/bin/top -o cpu
    else
      /usr/bin/top "$@"
    fi
  }

  # Always use:
  #   l: List in long format
  #   h: Sizes in human-readable form
  #   F: Dir, symlink, executable, etc., symbols
  #   G: Colorize!
  alias l="ls -lhFG"
  alias la="ls -lhFGA"   # All files
  alias ltr="ls -lhFGtr" # By time, reverse
  alias lsr="ls -lhFGSr" # By size, reverse
else
  # Non-OS X things.
  alias l="ls -lhF --group-directories-first --color=always"
fi

# Finally, remove duplicate PATH entries.
typeset -a paths result
paths=($path)

while [[ ${#paths} -gt 0 ]]; do
  p="${paths[1]}"
  shift paths
  [[ -z ${paths[(r)$p]} ]] && result+="$p"
done

clean_path=${(j+:+)result}
export PATH
export PATH=$clean_path

# vim: set et ts=2 sw=2 tw=79 cc=+1 :
